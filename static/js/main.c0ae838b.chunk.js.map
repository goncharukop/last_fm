{"version":3,"sources":["api/api.js","api/tracks.js","components/TopTracks/TopTracks.js","App.jsx","index.js"],"names":["BASE_URL","key","request","url","options","a","fetch","response","ok","Error","status","statusText","json","result","getTopTracks","tracks","track","TopTracks","useState","top","setTop","topTracks","console","log","type","onClick","map","name","artist","App","className","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAAMA,EAAW,4CACXC,EAAM,mCAEL,SAAeC,EAAtB,oC,4CAAO,WAAuBC,EAAKC,GAA5B,iBAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIN,GAAJ,OAAeG,GAAf,OAAqBF,EAArB,gBAAwCG,GAD/D,WACCG,EADD,QAGSC,GAHT,sBAIG,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9C,uBAOgBJ,EAASK,OAPzB,cAOCC,EAPD,yBASEA,GATF,4C,sBCDA,SAAeC,IAAtB,+B,4CAAO,4BAAAT,EAAA,sEACgBH,EAAQ,6CADxB,cACCW,EADD,yBAGEA,EAAOE,OAAOC,OAHhB,4C,kCCEMC,G,MAAY,WAAO,IAAD,EACPC,mBAAS,IADF,mBACtBC,EADsB,KACjBC,EADiB,KAGvBC,EAAS,uCAAG,sBAAAhB,EAAA,kEAChBe,EADgB,SACHN,IADG,kCAIhBQ,QAAQC,IAAIJ,GAJI,2CAAH,qDAOf,OACE,qCACE,wBACEK,KAAK,SACLC,QAASJ,EAFX,6BAMA,6BAEIF,EAAIO,KAAI,SAAAV,GAAK,OACX,+BACE,6BAAKA,EAAMW,OACX,6BAAKX,EAAMY,OAAOD,SAFXX,EAAMb,eClBd0B,EAAM,WAEPf,IAEV,OACE,gCACE,cAAC,EAAD,IACA,gCACE,sBAAKgB,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,+CAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,wDCnBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c0ae838b.chunk.js","sourcesContent":["const BASE_URL = 'http://ws.audioscrobbler.com/2.0/?method=';\nconst key = '269e56f769966f443e473d44204a9c98';\n\nexport async function request(url, options) {\n  const response = await fetch(`${BASE_URL}${url}${key}&format=json`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n}\n","import { request } from './api';\n\nexport async function getTopTracks() {\n  const result = await request('geo.gettoptracks&country=ukraine&api_key=');\n\n  return result.tracks.track;\n}\n","import React, { useState } from 'react';\nimport { getTopTracks } from '../../api/tracks';\nimport './TopTracks.scss';\n\nexport const TopTracks = () => {\n  const [top, setTop] = useState([]);\n\n  const topTracks = async() => {\n    setTop(await getTopTracks());\n\n    // eslint-disable-next-line no-console\n    console.log(top);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={topTracks}\n      >\n        Show top tracks\n      </button>\n      <ul>\n        {\n          top.map(track => (\n            <tr key={track.url}>\n              <td>{track.name}</td>\n              <td>{track.artist.name}</td>\n            </tr>\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","// import React, { useState } from 'react';\nimport React from 'react';\nimport './App.scss';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport { getTopTracks } from './api/tracks';\nimport { TopTracks } from './components/TopTracks/TopTracks';\n\nexport const App = () => {\n  // eslint-disable-next-line no-unused-vars\n  const x = getTopTracks();\n\n  return (\n    <div>\n      <TopTracks />\n      <div>\n        <nav className=\"nav\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/users\">Users</Link>\n        </nav>\n\n        <Switch>\n          <Route path=\"/users\">\n            <div>Users page</div>\n          </Route>\n          <Route path=\"/\">\n            <div>Home page</div>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}